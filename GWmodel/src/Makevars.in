PKG_CXXFLAGS = -std=gnu++11 -ARMA_64BIT_WORD=1 $(SHLIB_OPENMP_CXXFLAGS)
CUDA_LIBS =   -L@CUDA_LIBDIR@ -Wl,-rpath=@CUDA_LIBDIR@ -lcudart -lcublas
PKG_LIBS = $(LAPACK_LIBS) $(BLAS_LIBS) $(FLIBS) $(SHLIB_OPENMP_CXXFLAGS)
R_LIBS = @R_LIBS@
ENABLE_CUDA = @ENABLE_CUDA@
GWmodel_CUDA_LIB_PATH=@GWmodel_CUDA_LIB_PATH@

# R_PACKAGE_DIR=@R_PACKAGE_DIR@
# R_PACKAGE_DIR_REAL=@R_PACKAGE_DIR_REAL@

ifeq (${ENABLE_CUDA},1)
cu_sources =  GWmodelKernel.cu
cu_sharedlibs = GWmodelKernel.o
cpp_sources_cuda = CGWmodelCUDA.cpp IGWmodelCUDA.cpp
cpp_sharedlibs_cuda = CGWmodelCUDA.o IGWmodelCUDA.o
OBJECTS_CUDA = ${cu_sharedlibs} ${cpp_sharedlibs_cuda}

DEFS = -DCUDA_ACCE
TARGET_CUDA_LIB = libgwmodelcuda.so

PKG_LIBS += ${CUDA_LIBS} -L${HOME}/.cache/GWmodel -Wl,-rpath=${HOME}/.cache/GWmodel  -lgwmodelcuda
endif

cpp_sources = RcppExports.cpp GWmodel.cpp
cpp_sharedlibs= RcppExports.o GWmodel.o

c_sources = init.c
c_sharedlibs = init.o

OBJECTS = ${cpp_sharedlibs} ${c_sharedlibs}

R_INC = -I./GWmodelCUDA @R_INCL@ @RCPP_INCL@ @RCPP_ARMA_INCL@ @CU_INCL@
CXX_ARGS =  @R_CPIC@ $(SHLIB_OPENMP_CXXFLAGS) -DNDEBUG ${CXX11FLAGS}

CU_ARGS = -std=c++11 -Xcompiler -fPIC -Xcudafe --diag_suppress=boolean_controlling_expr_is_constant -DNDEBUG
CU_INCL = @R_INCL@ @RCPP_INCL@
CU_ARCH = -gencode arch=compute_30,code=sm_30 \
-gencode arch=compute_35,code=sm_35 \
-gencode arch=compute_37,code=sm_37 \
-gencode arch=compute_52,code=sm_52 \
-gencode arch=compute_60,code=sm_60 \
-gencode arch=compute_61,code=sm_61 \
-gencode arch=compute_70,code=sm_70 \
-gencode arch=compute_75,code=sm_75



CXX=@CXX@
NVCC=@NVCC@
CUDA_INCL =  @CUDA_INCL@



vpath %.cu ./GWmodelCUDA
vpath %.cpp ./GWmodelCUDA

.PHONY: all clean

all : ${TARGET_CUDA_LIB} GWmodel.so

${TARGET_CUDA_LIB}: ${OBJECTS_CUDA}
	${SHLIB_LINK}  -o $@ $^ ${CUDA_LIBS} 
	# cp $@ $(R_HOME)/lib$(R_ARCH)
	# cp  -r $@ ${R_PACKAGE_DIR_REAL}/libs
	# cp  -r $@ ${R_PACKAGE_DIR}/libs
	mkdir -p ${GWmodel_CUDA_LIB_PATH}
	cp $@ ${GWmodel_CUDA_LIB_PATH}


GWmodel.so : ${TARGET_CUDA_LIB} ${OBJECTS_CUDA} ${OBJECTS}

${cpp_sharedlibs_cuda}: %.o: %.cpp 
	$(CXX) $(CXX_ARGS)  -DCUDA_ARCH=52 $(R_INC) -I${CUDA_INCL} $< -c

${cu_sharedlibs}: %.o: %.cu
	$(NVCC) $(CU_ARCH) $(CU_ARGS) $(CU_INCL) $< -c

${cpp_sharedlibs}: %.o :%.cpp
	${CXX} $(CXX_ARGS)  $(DEFS) $(R_INC) $< -c

clean: 
	rm -rf  *.o Makevars
    